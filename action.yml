name: 'Grade Homework'
description: 'Request homework grade for late submissions'

# inputs:
#   token:
#     description: 'Authentication token to access repositories'
#     required: true

# runs:
#   using: 'node16'
#   main: 'index.js'

runs:
  using: 'composite'
  steps:
    - name: Parse Issue
      id: parse-issue
      uses: actions/github-script@v6
      with:
        script: |
          core.info(`Parsing issue body...`);
          const body = context.payload.issue.body;
          const pattern = /```json([^`]+)```/;
          const matched = body.match(pattern);

          if (matched !== null && matched.length === 2) {
            try {
              const parsed = JSON.parse(matched[1]);

              if (!parsed.hasOwnProperty('runid')) {
                parsed.runid = '';
              }

              if (parsed.hasOwnProperty('name') && parsed.hasOwnProperty('user')) {
                core.info(JSON.stringify(parsed));
                return parsed;
              }

              core.setFailed(`Required "name" and "user" properties missing from issue body.`);
            }
            catch (error) {
              core.setFailed(`Unable to parse issue body as JSON. Error: ${error.message}`);
            }
          }
          else {
            core.setFailed(`Unable to find JSON details from issue body. Found: ${matched}`);
          }

    - name: Check Results
      id: check-results
      uses: usf-cs272-fall2022/action-check-results@main
      with:
        artifact_name: "check-deadline-results"
        artifact_json: "check-deadline-results.json"
        workflow_name: "classroom.yml"
        workflow_run:  "${{ steps.parse-issue.outputs.result.runid }}"
        token: "${{ secrets.GITHUB_TOKEN }}"

    - name: Display Results
      id: display-results
      uses: actions/github-script@v6
      env:
        RESULTS_JSON: "${{ steps.check-results.outputs.json_string }}"
      with:
        script: |
          const output = JSON.parse(process.env.RESULTS_JSON);

          for (const property in output) {
            core.info(`${property}: ${JSON.stringify(output[property])}`);
          }

          return output;
# 1. Get student name, email, and run from issue body.
# 2. Get artifact from workflow run.
# 3. Respond to issue.
